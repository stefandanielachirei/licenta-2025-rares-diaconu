services:
  postgres:
    image: postgres:14
    container_name: my_postgres_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    volumes:
      - ./db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d postgres"]
      interval: 5s
      retries: 5
      timeout: 5s
    networks:
      - mynetwork

  fastapi_app:
    build: ./backend
    container_name: fastapi_app
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - mynetwork

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - /d/Facultate/AN4/Licenta/nginx.conf:/etc/nginx/nginx.conf
      - /d/Facultate/AN4/Licenta/frontend/goodreads/dist/goodreads:/usr/share/nginx/html
    ports:
      - "80:80"
    depends_on:
      - fastapi_app
    networks:
      - mynetwork

  nlp_model:
    build: ./nlp_model
    container_name: nlp_model
    volumes:
      - ./nlp_model:/app
    ports:
      - "8001:8001"
    depends_on:
      - fastapi_app
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge
